@* @model IEnumerable<GoEdu.ViewModel.VMQuestionAnswer> *@

@* @{ *@
@*     ViewData["Title"] = "ShowLectureQuestions"; *@
@* } *@

@* <h1>Show Lecture Questions</h1> *@

@* <form asp-action="ShowLectureQuestions" method="post"> *@
@*     <div class="container"> *@
@*         @for (int i = 0; i < Model.Count(); i++) *@
@*         { *@
@*             var question = Model.ElementAt(i); *@

@*             <div class="mb-4 p-3 border rounded"> *@
@*                 <input type="hidden" name="[@i].LectureId" value="@question.LectureId" /> *@
@*                 <input type="hidden" name="[@i].QuestionId" value="@question.QuestionId" /> *@
@*                 <input type="hidden" name="[@i].StudentId" value="@question.StudentId" /> *@
@*                 <input type="hidden" name="[@i].ModelAnswer" value="@question.ModelAnswer" /> *@
@*                 <input type="hidden" name="[@i].Content" value="@question.Content" /> *@

@*                 <h5>Q@(@i + 1): @question.Content</h5> *@

@*                 <div class="d-flex gap-3"> *@
@*                     @for (int j = 0; j < question.options.Count(); j++) *@
@*                     { *@
@*                         <label class="form-check-label"> *@
@*                             <input type="radio" *@
@*                                    name="[@i].StudentAnswer" *@
@*                                    value="@question.options[j].Content" *@
@*                                    class="form-check-input" /> *@
@*                             @question.options[j].Content *@
@*                         </label> *@
@*                     } *@
@*                 </div> *@
@*                @*  <span asp-validation-for="[@i].StudentAnswer" class="text-danger"></span> *@ 
@*             </div> *@
@*         } *@

@*         <div class="form-group"> *@
@*             <input type="submit" value="Submit Answers" class="btn btn-primary" /> *@
@*         </div> *@
@*     </div> *@
@* </form> *@

@* @section Scripts { *@
@*     @{ *@
@*         await Html.RenderPartialAsync("_ValidationScriptsPartial"); *@
@*     } *@
@* } *@



@* @model IEnumerable<GoEdu.ViewModel.VMQuestionAnswer> *@

@* @{ *@
@*     ViewData["Title"] = "ShowLectureQuestions"; *@
@* } *@

@* <h1>Show Lecture Questions</h1> *@

@* <form asp-action="ShowLectureQuestions" method="post"> *@
@*     <div class="container"> *@
@*         @foreach (VMQuestionAnswer question in Model) *@
@*         { *@
@*             <div class="mb-4 p-3 border rounded"> *@
@*                 <input type="hidden" name="LectureId" value="@question.LectureId" /> *@
@*                 <input type="hidden" name="QuestionId" value="@question.QuestionId" /> *@
@*                 <input type="hidden" name="StudentId" value="@question.StudentId" /> *@
@*                 <input type="hidden" name="ModelAnswer" value="@question.ModelAnswer" /> *@
@*                 <input type="hidden" name="Content" value="@question.Content" /> *@

@*                 <h5>@question.Content</h5> *@

@*                 <div class="d-flex gap-3 flex-column"> *@
@*                     @foreach (Option option in question.options) *@
@*                     { *@

@*                         <label class="form-check-label"> *@
@*                             <input type="radio" *@
@*                                    name="StudentAnswer" *@
@*                                    value="@option.Content" *@
@*                                    class="form-check-input" /> *@
@*                             @option.Content *@
@*                         </label> *@
@*                     } *@
@*                 </div> *@

@*                 @* <span asp-validation-for="StudentAnswer" class="text-danger"></span> *@ 
@*             </div> *@
@*         } *@

@*         <div class="form-group"> *@
@*             <input type="submit" value="Submit Answers" class="btn btn-primary" /> *@
@*         </div> *@
@*     </div> *@
@* </form> *@

@* @section Scripts { *@
@*     @{ *@
@*         await Html.RenderPartialAsync("_ValidationScriptsPartial"); *@
@*     } *@
@* } *@
@* @model IList<GoEdu.ViewModel.VMQuestionAnswer> *@

@* @{ *@
@*     ViewData["Title"] = "ShowLectureQuestions"; *@
@* } *@

@* <h1>Show Lecture Questions</h1> *@

@* @using (Html.BeginForm("ShowLectureQuestions", "Question", FormMethod.Post)) *@
@* { *@
@*     @Html.AntiForgeryToken() *@

@*     <div class="container"> *@
@*         @for (int i = 0; i < Model.Count(); i++) *@
@*         { *@
@*             <div class="mb-4 p-3 border rounded"> *@
@*                 @Html.HiddenFor(m => m[i].LectureId) *@
@*                 @Html.HiddenFor(m => m[i].QuestionId) *@
@*                 @Html.HiddenFor(m => m[i].StudentId) *@
@*                 @Html.HiddenFor(m => m[i].ModelAnswer) *@
@*                 @Html.HiddenFor(m => m[i].Content) *@

@*                 <h5>@Model[i].Content</h5> *@

@*                 <div class="d-flex gap-3 flex-column"> *@
@*                     @for (int j = 0; j < Model[i].options.Count(); j++) *@
@*                     { *@
@*                         <label class="form-check-label"> *@
@*                             @Html.RadioButtonFor(m => m[i].StudentAnswer, Model[i].options[j].Content, new { @class = "form-check-input" }) *@
@*                             @Model[i].options[j].Content *@
@*                         </label> *@
@*                     } *@
@*                 </div> *@

@*                 @Html.ValidationMessageFor(m => m[i].StudentAnswer, "", new { @class = "text-danger" }) *@
@*             </div> *@
@*         } *@

@*         <div class="form-group"> *@
@*             <input type="submit" value="Submit Answers" class="btn btn-primary" /> *@
@*         </div> *@
@*     </div> *@
@* } *@
@model IList<GoEdu.ViewModel.VMQuestionAnswer>

@{
	ViewData["Title"] = "ShowLectureQuestions";
}

<h1 class="text-4xl font-extrabold text-center text-gray-800 mb-8">الأسئلة المتعلقة بالمحاضرة</h1>

@using (Html.BeginForm("ShowLectureQuestions", "Question", FormMethod.Post))
{
	@Html.AntiForgeryToken()

	@if (Model.Any())
	{
		<div class="container mx-auto p-4 max-w-screen-lg overflow-hidden">
			@for (int i = 0; i < Model?.Count(); i++)
			{
				<div class="bg-white p-6 rounded-lg shadow-lg mb-6">
					@Html.HiddenFor(m => m[i].LectureId)
					@Html.HiddenFor(m => m[i].QuestionId)
					@Html.HiddenFor(m => m[i].StudentId)
					@Html.HiddenFor(m => m[i].ModelAnswer)
					@Html.HiddenFor(m => m[i].Content)

					<h5 class="text-2xl font-semibold text-gray-800 mb-4">السؤال @(@i + 1): @Model[i].Content</h5>

					<div class="space-y-4">
						@for (int j = 0; j < Model[i].options.Count(); j++)
						{
							<div class="flex items-center space-x-3">
								@Html.RadioButtonFor(m => m[i].StudentAnswer, Model[i].options[j].Content,
													new { @class = "form-check-input rounded-full h-5 w-5 text-blue-600 focus:ring-blue-500" })
								<label class="text-lg text-gray-700">
									@Model[i].options[j].Content
								</label>
							</div>
						}
					</div>

					<div class="text-red-600 mt-2 text-sm">
						@Html.ValidationMessageFor(m => m[i].StudentAnswer, "", new { @class = "text-danger" })
					</div>
				</div>
			}

			<div class="text-center mt-8 flex justify-center gap-4">
				<input type="submit"
					   value="إرسال الإجابات"
					   class="px-8 py-2 bg-gray-700 text-white rounded-lg hover:bg-gray-800 focus:outline-none focus:ring-4 focus:ring-gray-500 focus:ring-opacity-50 text-lg" />

				<a href="@Url.Action("LectureDetails", "Lecture", new { id = Model.First().LectureId })"
				   class="inline-block no-underline-custom px-8 py-2 bg-indigo-900 text-white rounded-lg hover:bg-indigo-800 focus:outline-none focus:ring-4 focus:ring-indigo-700 focus:ring-opacity-50 text-lg">
					العودة إلى المحاضرة
				</a>
			</div>



		</div>
	}
	else
	{
		<div class="alert alert-warning text-center bg-yellow-100 border border-yellow-400 text-yellow-800 px-4 py-6 rounded-lg shadow-md mt-8" role="alert">
			<strong class="text-lg">لا يوجد أسئلة متاحة لهذه المحاضرة حالياً.</strong>
			<div class="mt-4">
				<a href="@Url.Action("LectureDetails", "Lecture", new { id = ViewBag.LectureId ?? 0 })"
				   class="btn btn-primary bg-indigo-900 text-white px-6 py-2 rounded-lg hover:bg-indigo-800">
					العودة إلى المحاضرة
				</a>
			</div>
		</div>
	}
}
<style>
	a {
		text-decoration: none !important;
	}
</style>



