@model GoEdu.ViewModel.VMLectureDetails

@{
    ViewData["Title"] = "LectureDetails";
    Layout = "_AdvancedLayout";
}
<input type="hidden" value="@ViewBag.userId" id="userId"/>
<div class="container mx-auto p-8 max-w-6xl">
    <!-- عنوان الصفحة -->
    <h1 class="text-4xl font-extrabold text-center text-indigo-800 mb-10">@ViewData["Title"]</h1>

    <!-- كارت المحاضرة -->
    <div class="bg-gradient-to-br from-indigo-50 to-white shadow-2xl rounded-2xl p-10 mb-10 border border-indigo-200">

        <!-- عنوان المحاضرة -->
        <h2 class="text-3xl font-extrabold text-center text-indigo-700 mb-8 bg-indigo-100 py-3 rounded-md shadow-md">
            @Html.DisplayFor(model => model.Title)
        </h2>

        <!-- الفيديو -->
        @if (!string.IsNullOrEmpty(Model.VideoURL))
        {
            <div class="w-full mb-10">
                <iframe class="w-full h-80 rounded-xl border-4 border-indigo-300 shadow-lg"
                        src="@Model.VideoURL"
                        frameborder="0"
                        allow="autoplay; fullscreen"
                        allowfullscreen>
                </iframe>
            </div>
        }

        <!-- تفاصيل المحاضرة -->
        <div class="grid grid-cols-1 md:grid-cols-2 gap-8">
            <dl class="space-y-5 text-indigo-900 text-lg">
                <div class="flex justify-between border-b pb-2">
                    <dt class="font-semibold text-indigo-700">اسم الكورس:</dt>
                    <dd class="text-gray-700">@Html.DisplayFor(model => model.CourseName)</dd>
                </div>
                <div class="flex justify-between border-b pb-2">
                    <dt class="font-semibold text-indigo-700">تاريخ المحاضرة:</dt>
                    <dd class="text-gray-700">@Html.DisplayFor(model => model.LectureTime)</dd>
                </div>
                <div class="flex justify-between border-b pb-2">
                    <dt class="font-semibold text-indigo-700">الوصف:</dt>
                    <dd class="text-gray-700 text-end">@Html.DisplayFor(model => model.Description)</dd>
                </div>
                <div class="flex justify-between">
                    <dt class="font-semibold text-indigo-700">عدد المشاهدات:</dt>
                    <dd class="text-gray-700">@Html.DisplayFor(model => model.ViewsCount)</dd>
                </div>
            </dl>
        </div>
    </div>

    <!-- قسم التعليقات -->
    <div class="bg-white p-10 rounded-2xl shadow-2xl border border-gray-200">
        <h4 class="text-3xl font-bold text-indigo-700 mb-8 text-center">💬 التعليقات</h4>

        <ul id="Comments" class="space-y-6">
            @foreach (VMComment comment in Model.Comments)
            {
                <li class="flex items-start gap-4 bg-indigo-50 p-6 rounded-xl shadow-sm border border-indigo-100">
                    <img src="@comment.UserImageUrl" alt="User Image" class="w-14 h-14 rounded-full border-2 border-indigo-300 shadow-sm" />
                    <div class="flex-1">
                        <div class="flex justify-between items-center">
                            <p class="text-indigo-800 font-semibold text-lg">@comment.UserName</p>
                            <small class="text-gray-500">@comment.Date</small>
                        </div>
                        <p class="text-gray-800 mt-2 leading-relaxed">@comment.Content</p>
                    </div>
                </li>
            }
        </ul>

        <!-- إضافة تعليق -->
        <div class="mt-10">
            <label for="content" class="block text-xl font-bold text-indigo-800 mb-3">✍ اكتب تعليقك:</label>
            <textarea id="content" name="Content" rows="6" class="h-40 w-full p-4 border border-gray-300 rounded-lg focus:outline-none focus:ring-2 focus:ring-indigo-400 shadow-sm" placeholder="أضف تعليقك هنا..."></textarea>
            <input type="hidden" id="lectureId" value="@Model.ID" />
            <button class="mt-4 bg-green-600 hover:bg-green-700 text-white px-6 py-3 rounded-lg shadow-md transition duration-300" type="button" onclick="SendCommentJS()">إرسال التعليق</button>
        </div>
    </div>

    <!-- روابط إضافية -->
    
    <div class="text-center mt-8">
        <a href="@Url.Action("DashBoard", "Student")" class="text-white bg-indigo-600 hover:bg-indigo-700 font-medium py-2 px-6 rounded-lg shadow transition duration-300">
            رجوع
        </a>
    </div>
</div>



<script src="~/lib/jquery/dist/jquery.js"></script>
<script src="https://cdnjs.cloudflare.com/ajax/libs/microsoft-signalr/8.0.7/signalr.min.js" integrity="sha512-7SRCYIJtR6F8ocwW7UxW6wGKqbSyqREDbfCORCbGLatU0iugBLwyOXpzhkPyHIFdBO0K2VCu57fvP2Twgx1o2A==" crossorigin="anonymous" referrerpolicy="no-referrer"></script>

<script>
    var hub = new signalR.HubConnectionBuilder().withUrl("/CommentHub").build();
    hub.start().then(function () {
        console.log("Hub Connect opened Success");
    });

        hub.on("CommentAdded", function (comment) {
        if(comment.lectureId == @Model.ID)
        {
            $("#Comments").append(`
                <li class="flex items-start gap-4 bg-indigo-50 p-6 rounded-xl shadow-sm border border-indigo-100">
                    <img src="${comment.userImageUrl}" alt="User Image" class="w-14 h-14 rounded-full border-2 border-indigo-300 shadow-sm" />
                    <div class="flex-1">
                        <div class="flex justify-between items-center">
                            <p class="text-indigo-800 font-semibold text-lg">${comment.userName}</p>
                            <small class="text-gray-500">${comment.date}</small>
                        </div>
                        <p class="text-gray-800 mt-2 leading-relaxed">${comment.content}</p>
                    </div>
                </li>
            `);
        }
    });

       
    function SendCommentJS(){
        var UserId = $("#userId").val();
        var lectureId = $("#lectureId").val();
        var content = $("#content").val();
        hub.invoke("AddComment", lectureId, content , UserId);
    }
</script>